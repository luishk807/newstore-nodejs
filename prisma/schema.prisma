generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brand {
  id            BigInt          @id @default(autoincrement())
  name          String?         @db.VarChar(50)
  brand_product brand_product[]
}

model brand_product {
  brand_id   BigInt
  product_id BigInt
  brand      brand   @relation(fields: [brand_id], references: [id])
  product    product @relation(fields: [product_id], references: [id])

  @@id([brand_id, product_id])
}

model category {
  id               BigInt             @id @default(autoincrement())
  name             String?            @db.VarChar(50)
  category_product category_product[]
}

model category_product {
  category_id BigInt
  product_id  BigInt
  category    category @relation(fields: [category_id], references: [id])
  product     product  @relation(fields: [product_id], references: [id])

  @@id([category_id, product_id])
}

model client {
  id             BigInt           @id @default(autoincrement())
  first_name     String           @db.VarChar(50)
  last_name      String?          @db.VarChar(50)
  phones         String?          @db.VarChar(50)
  email          String?          @db.VarChar(254)
  created_at     DateTime         @default(now()) @db.Date
  identification String?          @db.VarChar(30)
  client_address client_address[]
  order          order[]
}

model client_address {
  id         BigInt  @id @default(autoincrement())
  client_id  BigInt
  address    String
  is_default Boolean @default(false)
  type       String? @db.Char(10)
  latitude   String? @db.VarChar(20)
  longitude  String? @db.VarChar(20)
  client     client  @relation(fields: [client_id], references: [id])
  order      order[]
}

model department {
  id                 BigInt               @id @default(autoincrement())
  name               String               @db.VarChar(50)
  description        String?              @db.VarChar(100)
  department_product department_product[]
}

model department_product {
  department_id BigInt
  product_id    BigInt
  department    department @relation(fields: [department_id], references: [id])
  product       product    @relation(fields: [product_id], references: [id])

  @@id([department_id, product_id])
}

model discount_rule {
  id                    BigInt                  @id @default(autoincrement())
  name                  String                  @db.VarChar(50)
  min_quantity          Int
  discount_percentage   Decimal                 @db.Decimal(3, 2)
  product_discount_rule product_discount_rule[]
}

model oauth_clients {
  client_id     String
  client_secret String
  redirect_uri  String

  @@id([client_id, client_secret])
}

model oauth_tokens {
  id                       String   @id @db.Uuid
  access_token             String
  access_token_expires_on  DateTime @db.Timestamp(6)
  client_id                String
  refresh_token            String
  refresh_token_expires_on DateTime @db.Timestamp(6)
  user_account_id          String   @db.Uuid
}

model option {
  id                     BigInt                   @id @default(autoincrement())
  name                   String                   @db.VarChar(20)
  description            String?                  @db.VarChar(100)
  option_value           option_value[]
  product_variant_option product_variant_option[]
}

model option_value {
  id                     BigInt                   @id @default(autoincrement())
  value                  String                   @db.VarChar(30)
  option_id              BigInt
  option                 option                   @relation(fields: [option_id], references: [id])
  product_variant_option product_variant_option[]
}

model order {
  id                BigInt          @id @default(autoincrement())
  order_number      String?         @db.VarChar(40)
  uuid              String          @db.Uuid
  client_id         BigInt
  client_address_id BigInt?
  subtotal          Decimal         @default(0) @db.Money
  tax               Decimal         @default(0) @db.Money
  total             Decimal         @default(0) @db.Money
  payment_type      String?         @db.Char(20)
  client_address    client_address? @relation(fields: [client_address_id], references: [id])
  client            client          @relation(fields: [client_id], references: [id])
  order_item        order_item[]
}

model order_item {
  id                 BigInt          @id @default(autoincrement())
  order_id           BigInt
  product_id         BigInt
  product_variant_id BigInt
  quantity           Int
  price              Decimal         @db.Money
  product_deal_id    BigInt?
  tax                Decimal         @default(0) @db.Money
  order              order           @relation(fields: [order_id], references: [id])
  product_deal       product_deal?   @relation(fields: [product_deal_id], references: [id])
  product            product         @relation(fields: [product_id], references: [id])
  product_variant    product_variant @relation(fields: [product_variant_id], references: [id])
}

model product {
  id                    BigInt                  @id @default(autoincrement())
  name                  String?                 @db.VarChar(50)
  description           String?
  taxable               Boolean                 @default(true)
  brand_product         brand_product[]
  category_product      category_product[]
  department_product    department_product[]
  order_item            order_item[]
  product_attribute     product_attribute[]
  product_deal          product_deal[]
  product_discount_rule product_discount_rule[]
  product_image         product_image[]
  product_variant       product_variant[]
  stock                 stock[]
  stock_entry           stock_entry[]
}

model product_attribute {
  id         BigInt  @id @default(autoincrement())
  product_id BigInt
  name       String  @db.VarChar(30)
  value      String  @db.VarChar(30)
  product    product @relation(fields: [product_id], references: [id])
}

model product_deal {
  id                  BigInt           @id @default(autoincrement())
  product_id          BigInt
  product_variant_id  BigInt?
  price               Decimal?         @db.Money
  discount_percentage Decimal?         @db.Decimal(3, 2)
  start_date          DateTime         @db.Date
  end_date            DateTime         @db.Date
  limit_quantity      Int              @default(0)
  product             product          @relation(fields: [product_id], references: [id])
  product_variant     product_variant? @relation(fields: [product_variant_id], references: [id])
  order_item          order_item[]
}

model product_discount_rule {
  product_id       BigInt
  discount_rule_id BigInt
  discount_rule    discount_rule @relation(fields: [discount_rule_id], references: [id])
  product          product       @relation(fields: [product_id], references: [id])

  @@id([product_id, discount_rule_id])
}

model product_image {
  id                 BigInt           @id @default(autoincrement())
  product_id         BigInt
  product_variant_id BigInt?
  product            product          @relation(fields: [product_id], references: [id])
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id])
}

model product_variant {
  id                     BigInt                   @id @default(autoincrement())
  product_id             BigInt
  sku                    String                   @db.VarChar(50)
  model                  String?                  @db.VarChar(50)
  description            String?                  @db.VarChar(1000)
  product                product                  @relation(fields: [product_id], references: [id])
  order_item             order_item[]
  product_deal           product_deal[]
  product_image          product_image[]
  product_variant_option product_variant_option[]
  stock                  stock[]
  stock_entry            stock_entry[]
}

model stock {
  id                 BigInt           @id @default(autoincrement())
  product_id         BigInt
  quantity           Int              @default(0)
  product_variant_id BigInt?
  price              Decimal          @default(1.0) @db.Money
  product            product          @relation(fields: [product_id], references: [id])
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id])

  @@unique([product_id, product_variant_id, price], name: "stock_product_id_product_variant_id_price_key")
}

model stock_entry {
  id                   BigInt          @id @default(autoincrement())
  warehouse_id         BigInt
  product_id           BigInt
  warehouse_rack_id    BigInt?
  created_at           DateTime        @db.Date
  unit_cost            Decimal         @db.Money
  unit_price           Decimal         @db.Money
  reference            String?         @db.VarChar(50)
  expiration_date      DateTime?       @db.Date
  product_variant_id   BigInt
  purchase_date        DateTime?       @db.Date
  supplier_id          BigInt
  quantity             Int
  supplier_invoice_ref String?         @db.VarChar(50)
  deleted              Boolean         @default(false)
  supplier_sku         String?         @db.VarChar(50)
  product              product         @relation(fields: [product_id], references: [id])
  product_variant      product_variant @relation(fields: [product_variant_id], references: [id])
  supplier             supplier        @relation(fields: [supplier_id], references: [id])
  warehouse            warehouse       @relation(fields: [warehouse_id], references: [id])
  warehouse_rack       warehouse_rack? @relation(fields: [warehouse_rack_id], references: [id])
}

model supplier {
  id          BigInt        @id @default(autoincrement())
  name        String        @db.VarChar(50)
  address     String?       @db.VarChar(100)
  phone       String?       @db.VarChar(20)
  stock_entry stock_entry[]
}

model user_account {
  id       String @id @db.Uuid
  username String @db.VarChar(50)
  password String @db.VarChar(100)
}

model warehouse {
  id             BigInt           @id @default(autoincrement())
  name           String?          @db.VarChar(50)
  address        String?          @db.VarChar(100)
  phone          String?          @db.VarChar(20)
  email          String?          @db.VarChar(50)
  stock_entry    stock_entry[]
  warehouse_rack warehouse_rack[]
}

model warehouse_rack {
  id           BigInt        @id @default(autoincrement())
  warehouse_id BigInt
  name         String        @db.VarChar(30)
  warehouse    warehouse     @relation(fields: [warehouse_id], references: [id])
  stock_entry  stock_entry[]
}

model product_variant_option {
  product_variant_id BigInt
  option_id          BigInt
  option_value_id    BigInt
  description        String?         @db.VarChar(1000)
  option             option          @relation(fields: [option_id], references: [id])
  option_value       option_value    @relation(fields: [option_value_id], references: [id])
  product_variant    product_variant @relation(fields: [product_variant_id], references: [id])

  @@unique([product_variant_id, option_id, option_value_id], name: "product_variant_option_product_variant_id_option_id_option__key")
}

model view_product {
  id            		  BigInt @id
  product_variant_id	BigInt?
  product_id    		  BigInt
  stock_id				    BigInt
  name          		  String
  description   		  String
  sku           		  String
  model         		  String?
  brand         		  String?
  category      		  String?
  department    		  String?
  option        		  String?
  option_value  		  String?
  quantity				    BigInt
}

model view_stock_summary {
	row_number				  BigInt @id
	product_id				  BigInt
  product_variant_id	BigInt?
	product_name			  String
	option					    String?
	option_value			  String?
	sku						      String?
	model					      String?
	unit_price				  Float
	quantity				    BigInt
	entries					    BigInt
}
