generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brand {
  id            Int             @id @default(autoincrement())
  name          String?
  brand_product brand_product[]
}

model brand_product {
  brand_id   Int
  product_id Int
  brand      brand   @relation(fields: [brand_id], references: [id])
  product    product @relation(fields: [product_id], references: [id])

  @@id([brand_id, product_id])
}

model category {
  id               Int                @id @default(autoincrement())
  name             String?
  category_product category_product[]
}

model category_product {
  category_id Int
  product_id  Int
  category    category @relation(fields: [category_id], references: [id])
  product     product  @relation(fields: [product_id], references: [id])

  @@id([category_id, product_id])
}

model department {
  id                 Int                  @id @default(autoincrement())
  name               String
  description        String?
  department_product department_product[]
}

model department_product {
  department_id Int
  product_id    Int
  department    department @relation(fields: [department_id], references: [id])
  product       product    @relation(fields: [product_id], references: [id])

  @@id([department_id, product_id])
}

model discount_rule {
  id                    Int                     @id @default(autoincrement())
  name                  String
  min_quantity          Int
  discount_percentage   Float
  product_discount_rule product_discount_rule[]
}

model option {
  id              Int               @id @default(autoincrement())
  name            String
  description     String?
  option_value    option_value[]
  product_variant product_variant[]
}

model option_value {
  id              Int               @id @default(autoincrement())
  value           String
  option_id       Int
  option          option            @relation(fields: [option_id], references: [id])
  product_variant product_variant[]
}

model product {
  id                    Int                     @id @default(autoincrement())
  name                  String?
  description           String?
  taxable               Boolean                 @default(true)
  brand_product         brand_product[]
  category_product      category_product[]
  department_product    department_product[]
  order_item            order_item[]
  product_attribute     product_attribute[]
  product_deal          product_deal[]
  product_discount_rule product_discount_rule[]
  product_image         product_image[]
  product_variant       product_variant[]
  stock                 stock[]
  stock_entry           stock_entry[]
}

model product_deal {
  id                  Int              @id @default(autoincrement())
  product_id          Int
  product_variant_id  Int?
  price               Float?
  discount_percentage Float?
  start_date          DateTime
  end_date            DateTime
  max_quantity        Int              @default(0)
  product             product          @relation(fields: [product_id], references: [id])
  product_variant     product_variant? @relation(fields: [product_variant_id], references: [id])
  order_item          order_item[]
}

model product_discount_rule {
  product_id       Int
  discount_rule_id Int
  discount_rule    discount_rule @relation(fields: [discount_rule_id], references: [id])
  product          product       @relation(fields: [product_id], references: [id])

  @@id([product_id, discount_rule_id])
}

model product_image {
  id                 Int              @id @default(autoincrement())
  product_id         Int
  product_variant_id Int?
  product            product          @relation(fields: [product_id], references: [id])
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id])
}

model product_variant {
  id              Int             @id @default(autoincrement())
  product_id      Int
  option_id       Int?
  option_value_id Int?
  sku             String
  model           String?
  option          option?         @relation(fields: [option_id], references: [id])
  option_value    option_value?   @relation(fields: [option_value_id], references: [id])
  product         product         @relation(fields: [product_id], references: [id])
  order_item      order_item[]
  product_deal    product_deal[]
  product_image   product_image[]
  stock           stock[]
  stock_entry     stock_entry[]
}

model stock {
  id                 Int              @id @default(autoincrement())
  product_id         Int
  quantity           Int              @default(0)
  product_variant_id Int?
  price              Float            @default(1.0)
  product            product          @relation(fields: [product_id], references: [id])
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id])

  @@unique([product_id, product_variant_id, price], name: "stock_product_id_product_variant_id_price_key")
}

model stock_entry {
  id                   Int             @id @default(autoincrement())
  warehouse_id         Int
  product_id           Int
  warehouse_rack_id    Int?
  created_at           DateTime
  unit_cost            Float
  unit_price           Float
  reference            String?
  expiration_date      DateTime?
  product_variant_id   Int
  purchase_date        DateTime?
  supplier_id          Int
  quantity             Int
  supplier_invoice_ref String?
  deleted              Boolean         @default(false)
  supplier_sku         String?
  product              product         @relation(fields: [product_id], references: [id])
  product_variant      product_variant @relation(fields: [product_variant_id], references: [id])
  supplier             supplier        @relation(fields: [supplier_id], references: [id])
  warehouse            warehouse       @relation(fields: [warehouse_id], references: [id])
  warehouse_rack       warehouse_rack? @relation(fields: [warehouse_rack_id], references: [id])
}

model supplier {
  id          Int           @id @default(autoincrement())
  name        String
  address     String?
  phone       String?
  stock_entry stock_entry[]
}

model warehouse {
  id             Int              @id @default(autoincrement())
  name           String?
  address        String?
  phone          String?
  email          String?
  stock_entry    stock_entry[]
  warehouse_rack warehouse_rack[]
}

model warehouse_rack {
  id           Int           @id @default(autoincrement())
  warehouse_id Int
  name         String
  warehouse    warehouse     @relation(fields: [warehouse_id], references: [id])
  stock_entry  stock_entry[]
}

model oauth_clients {
  client_id     String
  client_secret String
  redirect_uri  String

  @@id([client_id, client_secret])
}

model oauth_tokens {
  id                       String   @id
  access_token             String
  access_token_expires_on  DateTime
  client_id                String
  refresh_token            String
  refresh_token_expires_on DateTime
  user_account_id          String
}

model user_account {
  id       String @id
  username String
  password String
}

model client {
  id             Int              @id @default(autoincrement())
  first_name     String
  last_name      String?
  phones         String?
  email          String?
  created_at     DateTime         @default(now())
  client_address client_address[]
  order          order[]
}

model client_address {
  id         Int     @id @default(autoincrement())
  client_id  Int
  address    String
  is_default Boolean @default(false)
  type       String?
  latitude   String?
  longitude  String?
  client     client  @relation(fields: [client_id], references: [id])
  order      order[]
}

model order {
  id                Int             @id @default(autoincrement())
  order_number      String?
  uuid              String
  client_id         Int
  client_address_id Int?
  subtotal          Float           @default(0)
  tax               Float           @default(0)
  total             Float           @default(0)
  payment_type      String?
  client_address    client_address? @relation(fields: [client_address_id], references: [id])
  client            client          @relation(fields: [client_id], references: [id])
  order_item        order_item[]
}

model order_item {
  id                 Int             @id @default(autoincrement())
  order_id           Int
  product_id         Int
  product_variant_id Int
  quantity           Int
  price              Float
  product_deal_id    Int?
  tax                Float           @default(0)
  order              order           @relation(fields: [order_id], references: [id])
  product_deal       product_deal?   @relation(fields: [product_deal_id], references: [id])
  product            product         @relation(fields: [product_id], references: [id])
  product_variant    product_variant @relation(fields: [product_variant_id], references: [id])
}

model product_attribute {
  id         Int     @id @default(autoincrement())
  product_id Int
  name       String
  value      String
  product    product @relation(fields: [product_id], references: [id])
}

model view_product {
  id            		  Int @id
  product_variant_id	Int?
  product_id    		  Int
  stock_id				    Int
  name          		  String
  description   		  String
  sku           		  String
  model         		  String?
  brand         		  String?
  category      		  String?
  department    		  String?
  option        		  String?
  option_value  		  String?
  quantity				    Int
}
